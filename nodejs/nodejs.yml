# complete-deployment.yaml - Fixed to use internet-facing Load Balancers
apiVersion: v1
kind: ServiceAccount
metadata:
  name: got-admin-user
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: got-admin-user-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: got-admin-user
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: got
  labels:
    app: got
spec:
  replicas: 2
  selector:
    matchLabels:
      app: got
  template:
    metadata:
      labels:
        app: got
    spec:
      serviceAccountName: got-admin-user
      imagePullSecrets:
      - name: ecr-secret
      containers:
      - name: got-container
        image: 664418971885.dkr.ecr.us-east-2.amazonaws.com/sam_ecr:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 3443
          name: https
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: got-service
  labels:
    app: got
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3443
    protocol: TCP
  selector:
    app: got